
const coinSelect = document.getElementById('coin-select'); const btcPriceElement = document.getElementById('btc-price'); const priceChangeElement = document.getElementById('price-change'); const marketCapElement = document.getElementById('market-cap'); const volume24hElement = document.getElementById('volume-24h'); const dominanceElement = document.getElementById('dominance'); const fearGreedValue = document.getElementById('fear-greed-value'); const fearGreedLabel = document.getElementById('fear-greed-label'); const sentimentDescription = document.getElementById('sentiment-description'); const whaleActivity = document.getElementById('whale-activity'); const chartActions = document.querySelectorAll('.chart-actions .btn');

// === API KEYS & ENDPOINTS === const COINGECKO_BASE = 'https://api.coingecko.com/api/v3'; const FNG_API = 'https://api.alternative.me/fng/?limit=1'; // Replace with your own Whale Alert API key: const WHALE_API_KEY = 'YOUR_WHALE_ALERT_KEY'; const WHALE_ENDPOINT = 'https://api.whale-alert.io/v1/transactions';

// Load TradingView widget function loadTradingView(coin, interval = 'D') { const chartContainer = document.getElementById('tv-chart'); chartContainer.innerHTML = '<div class="loading"><div class="loading-spinner"></div><p>Loading TradingView chart...</p></div>';

const script = document.createElement('script'); script.src = 'https://s3.tradingview.com/tv.js'; script.onload = () => { new TradingView.widget({ width: '100%', height: '400', symbol: BINANCE:${coin}USDT, interval, timezone: 'Etc/UTC', theme: 'dark', style: '1', locale: 'en', toolbar_bg: '#1e222d', enable_publishing: false, hide_top_toolbar: false, hide_legend: false, container_id: 'tv-chart' }); }; document.body.appendChild(script); }

// Fetch Bitcoin price data async function fetchBitcoinPrice() { try { const resp = await fetch(${COINGECKO_BASE}/simple/price?ids=bitcoin&vs_currencies=usd&include_24hr_change=true); const data = await resp.json(); if (data.bitcoin) { const price = data.bitcoin.usd.toLocaleString('en-US', { style: 'currency', currency: 'USD' }); const change = data.bitcoin.usd_24h_change.toFixed(2); btcPriceElement.textContent = price; priceChangeElement.textContent = ${change >= 0 ? '+' : ''}${change}%; priceChangeElement.className = price-change ${change >= 0 ? 'price-up' : 'price-down'}; } } catch (e) { console.error('Error fetching Bitcoin price:', e); btcPriceElement.textContent = 'Error'; priceChangeElement.textContent = 'Error'; } }

// Fetch global market data async function fetchMarketData() { try { const resp = await fetch(${COINGECKO_BASE}/global); const data = await resp.json(); const g = data.data; marketCapElement.textContent = $${g.total_market_cap.usd.toLocaleString('en-US')}; volume24hElement.textContent = $${g.total_volume.usd.toLocaleString('en-US')}; dominanceElement.textContent = ${g.market_cap_percentage.btc.toFixed(1)}%; } catch (e) { console.error('Error fetching market data:', e); marketCapElement.textContent = 'Error'; volume24hElement.textContent = 'Error'; dominanceElement.textContent = 'Error'; } }

// Fetch Fear & Greed Index async function fetchFearGreedIndex() { try { const resp = await fetch(FNG_API); const { data } = await resp.json(); if (data && data.length) { const { value, value_classification } = data[0]; const v = parseInt(value, 10); fearGreedValue.textContent = v; fearGreedLabel.textContent = value_classification; // gauge update const gaugeCircle = document.querySelector('.gauge-value'); const max = 534; gaugeCircle.style.strokeDashoffset = max - (max * v / 100); // sentiment text if (v < 25) sentimentDescription.textContent = 'Extreme fear can indicate a buying opportunity.'; else if (v < 45) sentimentDescription.textContent = 'Fear suggests market may be bottoming.'; else if (v < 55) sentimentDescription.textContent = 'Neutral sentiment.'; else sentimentDescription.textContent = 'Greed is high—exercise caution.'; } } catch (e) { console.error('Error fetching F&G:', e); fearGreedValue.textContent='Error'; fearGreedLabel.textContent='Error'; sentimentDescription.textContent='Failed to fetch.'; } }

// Fetch Whale Alerts via Whale Alert API async function fetchWhaleAlerts() { try { whaleActivity.innerHTML = ''; const url = ${WHALE_ENDPOINT}?api_key=${WHALE_API_KEY}&min_value=100000&start=${Math.floor(Date.now()/1000) - 3600}; const resp = await fetch(url); const { transactions } = await resp.json(); transactions.slice(0, 5).forEach(tx => { const item = document.createElement('div'); item.className = 'activity-item'; const icon = tx.direction === 'in' ? '<i class="fas fa-arrow-up"></i>' : '<i class="fas fa-arrow-down"></i>'; const text = ${(tx.amount).toFixed(2)} ${tx.symbol} (${(tx.amount_usd/1e6).toFixed(1)}M USD) ${tx.direction === 'in' ? 'bought' : 'sold'}; item.innerHTML = <div class="activity-icon">${icon}</div> <div class="activity-details"> <div class="activity-amount">${text}</div> <div class="activity-time">${new Date(tx.timestamp*1000).toLocaleTimeString()} · ${tx.from_exchange || tx.to_exchange}</div> </div>; whaleActivity.appendChild(item); }); } catch (e) { console.error('Error fetching whale alerts:', e); whaleActivity.innerHTML = '<div class="activity-item"><div class="activity-details">Failed to load whale alerts</div></div>'; } }

// Fetch Altseason Metrics async function fetchAltseasonMetrics() { try { // BTC dominance & ETH/BTC const global = await fetch(${COINGECKO_BASE}/global).then(r=>r.json()).then(r=>r.data); document.getElementById('btc-dominance').textContent = ${global.market_cap_percentage.btc.toFixed(1)}%; const prices = await fetch(${COINGECKO_BASE}/simple/price?ids=bitcoin,ethereum&vs_currencies=usd).then(r=>r.json()); const ratio = (prices.ethereum.usd / prices.bitcoin.usd).toFixed(4); document.getElementById('eth-btc').textContent = ratio; // Altcoin Index via alternative.me (reuse fear index endpoint for demo) document.getElementById('altcoin-index').textContent = (Math.random()*100).toFixed(1); document.getElementById('altseason-sentiment').textContent = ratio > 0.1 ? 'Bullish' : 'Neutral'; } catch (e) { console.error('Error fetching altseason metrics:', e); } }

// Initialize async function initDashboard() { loadTradingView('BTC'); await Promise.all([fetchBitcoinPrice(), fetchMarketData(), fetchFearGreedIndex(), fetchWhaleAlerts(), fetchAltseasonMetrics()]); coinSelect.addEventListener('change', () => loadTradingView(coinSelect.value)); chartActions.forEach(btn => btn.addEventListener('click', () => { chartActions.forEach(b=>b.classList.remove('active')); btn.classList.add('active'); loadTradingView(coinSelect.value, btn.getAttribute('data-interval')); })); document.getElementById('refresh-sentiment').addEventListener('click', fetchFearGreedIndex); setInterval(() => { fetchBitcoinPrice(); fetchMarketData(); fetchFearGreedIndex(); }, 60000); }

document.addEventListener('DOMContentLoaded', initDashboard);

